--------
| Task |
--------
[ ] add handling error.
[ ] fix file comments.
[ ] add function comments.
[ ] make console.
[ ] add panic function.
[ ] fix vmalloc and related function.



--------
| Memo |
--------
clang option for cross compile
lib32-glibc-2.14-4
wc -l ./*.c ./*/*.c ./*.asm ./*/*.asm

a=0;foreach f (`find . -name "*.c" -o -name "*.asm"`)
e=$(du -b $f | sed 's/^\([0-9]*\).*/\1/g')
a=$((a+e))
end; echo "$((a/1024))kb"



--------------
| Considered |
--------------

ユーザ空間の実現にあたって
    ユーザ空間管理方法
        プロセス毎にページディレクトリテーブルを持たせる
        各プロセスは独自のページディレクトリテーブルを持つことでメモリ空間が独立する
        カーネルプロセスは唯一のものとする
            ただしカーネルスレッドは複数存在出来る.
        その時のページアウト、ページイン方法について
            ページアウト -> 全ユーザプロセスを走査して、対象を決める
                            ページの前に、対象プロセスを決めて、その中から更にページを決める
            ページイン   -> ページアウト時にプロセスの持つページディレクトリテーブルにその旨を書き込んでおく
                            それを元にスワップ先を判定して、復帰する.
    ユーザ、カーネル間のコンテキストスイッチ方式
        Linuxを真似て、各プロセスにカーネルスタックを設けるか？ -> 切り替えコストが低い
    ブート時のプロセス初期化手順
        カーネルプロセス初期化 -> ユーザプロセス生成
    カーネル -> ユーザへのスイッチング
